
# Difference-in-Differences (DID) Analysis

In this notebook, we we estimate the effect of Trump's calls for liberation in three specific states on compliance with state lockdown restrictions using a Difference-in-Differences (DID) approach. The authors compare Republican counties in the treated and control states. We use data from the Google Mobility Reports. The original study is by Dickson & Hobolt in APSR (2024). 


# First we install the necessary libraries and load the data

The data can be downloaded from Github [here](https://github.com/z-dickson/my580-causal-inference/data/google_mobility_data.csv).

```{r}

# install packages if they are not already installed

# List of package names to install
packages_to_install <- c("fixest", "tidyverse")

# Check if each package is already installed
for (package_name in packages_to_install) {
  if (!(package_name %in% installed.packages())) {
    # If not installed, install the package
    install.packages(package_name)
  }
}


# load libraries 
library(fixest) # for fixed effects regression
library(tidyverse) # for data manipulation
```


```{r}
# load data from Github  (uncomment the line below to load the data from Github)
#data <- read_csv("https://github.com/z-dickson/my580-causal-inference/data/google_mobility_data.csv")

# or, load data from local file if you've cloned the repository
data <- read_csv("../data/google_mobility_data.csv")

# print the first few rows
head(data)
```



# Data Cleaning

Usually, we would need to clean the data before we can use it for analysis. However, the data is already mostly clean. We will make some key adjustments to for demonstration purposes. 


# Let's create a column for `aggregate_mobility`

In the analysis, we will use an aggregate measure of mobility that combines all types of mobility (e.g., retail, grocery, parks, etc.). We will create a new column called `aggregate_mobility` that sums up all the mobility measures for each observation.


```{r}

# create variable for aggregate mobility by adding all the mobility variables 
data$aggregate_mobility = data$retail_and_recreation_mobility + data$grocery_and_pharmacy_mobility + data$parks_mobility + data$transit_mobility + data$workplaces_mobility + data$residential_mobility

# check the new column
hist(data$aggregate_mobility)
```



# Let's create a column for the treatment and control groups 

The treatment group is the states where Trump called for liberation (Michigan, Minnesota, and Virginia) and the control group is the states where he did not (all other states). 

**Note**: In the actual study, the treatment group is defined as the states where Trump called for liberation and the control group is the states that were under the same lockdown restrictions but were not targeted in Trump's calls for liberation. We'll subset the data so that only Republican states are included in the analysis.

```{r}
# create a variable for treatment and control groups
targeted_states <- c("Michigan", "Minnesota", "Virginia")

data <- data %>%
  mutate(treatment = ifelse(state_name %in% targeted_states, 1, 0))


# subset the data to include only Republican states
#data <- data %>%
#  filter(winning_party == "REPUBLICAN")

# check the treatment variable
table(data$treatment)
```


# Let's create the pre-post and treatment-control variables

The pre-post variable indicates whether the observation is before or after Trump's calls for liberation. Trump's messages were on April 17, 2020, so we will use that as the cutoff date.

```{r}
# create a variable for pre-post and treatment-control
data <- data %>%
  mutate(post = ifelse(date < "2020-04-17", 0, 1))

# check the pre-post and treatment-control variables - we'll print all the dates that appear in the data when the pre_post variable is 1
unique(data[data$post == 1, 'date'])
```




# Let's estimate the effect of Trump's calls for liberation on compliance with state lockdown restrictions using a Difference-in-Differences (DID) approach

We will use a fixed effects regression model to estimate the effect of Trump's calls for liberation on compliance with state lockdown restrictions. The model is specified as follows:

$$Y_{it} = \alpha_i + \lambda_t + \delta (\text{treated}_i * \text{post}_t) + \epsilon_{it}$$

where: 

- $Y_{it}$ = Mobility for state $i$ on day $t$
- $\alpha_i$ = state fixed effects
- $lambda_t$ = day fixed effects
- $\delta$ = estimated causal effect of the treatment
- $\text{treated}_i$ = indicator for treated states
- $\text{post}_t$ = indicator for post-treatment period
- $\epsilon_{it}$ = error term


## A note on notation 

It is worth mentioning that the equation above is effectively the same as the following: 

$$Y_{it} = \alpha_i + \lambda_t + \delta \text{treatment}_{it} + \epsilon_{it}$$

where $\text{treatment}_{it} = \text{treated}_i * \text{post}_t$.

This is because the interaction term $\text{treated}_i * \text{post}_t$ is effectively creating a variable that is 1 for treated states in the post-treatment period and 0 otherwise, and the fixed effects absorb the dummy variables. This is the essence of the Difference-in-Differences (DID) approach.

This equation is also effectively the same as the following:

$$Y_{it} = \beta_{0} \text{treated} + \beta_{1} \text{post} + \delta (\text{treated}_i * \text{post}_t) + \epsilon_{it}$$

Here, $\beta_{0}$ captures the average difference between treated and not-treated units. $\beta_{1}$ captures the average difference pre- and post-treatment. And $\delta$ captures the difference in these two differences; hence, the name "Difference-in-Differences."


# Estimating the model

There are many ways to estimate a DID model. Here, we will use the `fixest` package in R. 

`Fixest` syntax using a `|` to separate the fixed effects from the rest of the formula. Our syntax will look like the following: 

Our $Y_{it}$ is mobility (`aggregate_mobility`) in county $i$ (`county`) on day $t$ (`date`).

We will cluster the standard errors at the county level to account for potential correlation within counties.


```{r}
# estimate the DID model
did_model <- feols(fml = aggregate_mobility ~ treatment * post | county + date, data = data, vcov = ~ county)

summary(did_model)
```


# Interpretation of the results

The coefficient of the interaction term `treatment * pre_post` in the model output is the estimated causal effect of Trump's calls for liberation on compliance with state lockdown restrictions, given that our model is specified correctly and the assumptions of the DID approach hold. 

The coefficient of the interaction term is the difference-in-differences estimate. It tells us how much the treatment group (states where Trump called for liberation) changed relative to the control group (states where he did not) after the treatment (Trump's calls for liberation) compared to before the treatment.

The coefficient estimate is the **cumulative effect** of the treatment over the post-treatment period. Because the 'post-treatment' period in the data covers 1-week, the coefficient estimate is the cumulative effect of the treatment over that 1-week period. Hence, the cumulative ATT is about 6 percentage point, given that the outcome variable is in percentage points.



# What if we want to estimate the dynamic effects of the treatment over time? 

One of the key advantages to DiD is that we can estimate the dynamic effects of the treatment over time. This is typically referred to as the *event study* approach. Many libraries in R can help us estimate the event study approach. Here, we will use the `fixest` package to estimate the event study approach.


There are a few things we need to do to prepare the data. First, we need to convert the date variable to an integer. This is because the `Fixest` library uses a format where the holdout date is specified as an integer.

```{r}
# convert the date variable to an integer
data$date_int <- as.integer(as.factor(data$date))

# check the data by printing a dictionary of the date and the date_int variables
unique(data[c('date', 'date_int')])
```


# Estimating the event study model

We'll use April 17 -- the date of the messages -- as the holdout period. This means that the holdout period will be 8 (see above). 


```{r}
# estimate the event study model
event_study <- feols(fml = aggregate_mobility ~ i(date_int, treatment, ref = 7) | county + date_int, data = data, vcov = ~ county)

summary(event_study)
```


# Plot the event study results

We can plot the event study results to visualize the dynamic effects of the treatment over time. Using the `Fixest` library, we can use the `iplot` function to plot the event study results.

```{r}

iplot(event_study)
```


# How can we improve the analysis?

There are several ways to improve the analysis:

- Use a better estimator: While the fixed effects estimator is consistent and robust, it may not be the most efficient estimator. Other estimators, such as synthetic control, matrix completion, or other machine learning methods, may provide more precise estimates.
- Include more control variables: Adding more control variables can help reduce bias and improve the precision of the estimates.
- Check for parallel trends: The parallel trends assumption is crucial for the validity of the DID approach. Checking for parallel trends visually or using statistical tests can help ensure the validity of the estimates.
- Test for sensitivity: Conducting sensitivity analyses, such as placebo tests or robustness checks, can help assess the robustness of the estimates to different model specifications or assumptions.



# Extension 

In Dickson & Hobolt (2024), we use matrix completion methods to estimate a counterfactual using the data from the control states. We then compare the actual treatment effect to the counterfactual to estimate the causal effect of Trump's calls for liberation. That's beyond the scope of this notebook, but I'll include the code below: 

```{r}

# install packages if they are not already installed

# List of package names to install
packages_to_install <- c("fect")

# Check if each package is already installed
for (package_name in packages_to_install) {
  if (!(package_name %in% installed.packages())) {
    # If not installed, install the package
    install.packages(package_name)
  }
}

library(fect)


# create a treatment variable that includes the interaction of treatment and post
data$treatment_post <- data$treatment * data$post

# function to estimate the matrix completion
estimate <- function(data, formula) {
  fect(data = data,
       formula = formula,
       method = "mc", 
       seed = 42,
       index = c("county", "date_int"),
       r = c(0, 5),
       k = 10,
       CV = TRUE,
       force = "two-way",
       nlambda = 15, 
       se = TRUE,
       parallel = TRUE,
       cores = 16, # adjust accordingly 
       nboots = 200)
}

# estimate the matrix completion model
full_state_aggregate <- estimate(data, 
    aggregate_mobility ~ treatment_post)


# print the results
print(full_state_aggregate)


# plot the results
plot(full_state_aggregate)
```

